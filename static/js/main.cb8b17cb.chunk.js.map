{"version":3,"sources":["pages/index.js","pages/snake/constants.js","pages/snake/models/grid.js","pages/snake/models/base.js","pages/snake/models/food.js","pages/snake/models/snake.js","pages/snake/factories/ShapeFactory.js","pages/snake/utils/math.js","pages/snake/models/game.js","pages/snake/factories/GameFactory.js","pages/snake/sketch.js","pages/snake/index.js","App.js","serviceWorker.js","index.js"],"names":["IndexRoute","className","to","WINDOW_SIZE","GRID_SIZE","FRAME_RATE","KEYCODE_SPACE","Grid","p","options","this","prototype","draw","background","i","line","Base","size","position","x","y","Food","call","fill","rect","Snake","window","xspeed","yspeed","length","tail","direction","canChangeDirection","canEat","food","dist","isNotAlive","some","tailItem","getScore","eat","death","update","createVector","generatePosition","getRandomPosition","min","max","Math","ceil","floor","random","ShapeFactory","name","params","Game","grid","snake","gameIsPaused","score","init","setup","bind","keyPressed","keyCode","Const","start","resume","stop","frameRate","createCanvas","pausedGameDraw","textSize","textAlign","CENTER","text","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","GameFactory","sketch","SnakeGame","style","color","SnakeRouteIndex","path","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb8b17cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport '../App.css';\n\nfunction IndexRoute() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ul>\n          <li className=\"li-header\">\n            Games\n          </li>\n          <li>\n            <Link to=\"/snake\">Snake</Link>\n          </li>\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default IndexRoute;\n","export default {\n  WINDOW_SIZE: 600,\n  GRID_SIZE: 25,\n  FRAME_RATE: 15,\n  KEYCODE_SPACE: 32,\n}\n","import Const from \"../constants\";\n\nfunction Grid(p, options) {\n  this.p = p;\n  this.options = options;\n}\n\nGrid.prototype.draw = function () {\n  this.p.background(255);\n\n  for(let i=0; i < this.options.WINDOW_SIZE; i+=this.options.GRID_SIZE) {\n    this.p.line(0,i, this.options.WINDOW_SIZE,i);\n    this.p.line(i,0, i,this.options.WINDOW_SIZE);\n  }\n}\n\nexport default Grid;","function Base(p, { size, position }) {\n  this.p = p;\n\n  this.size = size;\n\n  this.x = position.x;\n  this.y = position.y;\n}\n\nexport default Base;\n","import Base from './base';\n\nfunction Food(p, options) {\n  Base.call(this, p, options);\n}\n\nFood.prototype.draw = function () {\n  this.p.fill('red');\n  this.p.rect(this.x, this.y, this.size, this.size);\n}\n\nexport default Food;","import Base from './base';\n\nfunction Snake(p, options) {\n  Base.call(this, p, options);\n\n  this.window = options.window;\n\n  this.xspeed = 1;\n  this.yspeed = 0;\n\n  this.length = 0;\n  this.tail = [];\n}\n\nSnake.prototype.direction = function(xspeed, yspeed) {\n  if (this.canChangeDirection(xspeed, yspeed)) {\n    this.xspeed = xspeed;\n    this.yspeed = yspeed;\n  }\n}\n\nSnake.prototype.canEat = function(food) {\n  return this.p.dist(this.x, this.y, food.x, food.y) < 1;\n}\n\nSnake.prototype.isNotAlive = function() {\n  return this.tail.some(tailItem =>\n    this.p.dist(this.x, this.y, tailItem.x, tailItem.y) < 1\n  );\n}\n\nSnake.prototype.canChangeDirection = function(xspeed, yspeed) {\n  if (this.tail.length > 0) {\n    return xspeed + this.xspeed !== 0 || yspeed + this.yspeed !== 0;\n  }\n\n  return true;\n}\n\nSnake.prototype.getScore = function() {\n  return this.length;\n}\n\nSnake.prototype.eat = function() {\n  this.length++;\n}\n\nSnake.prototype.death = function() {\n  this.length = 0;\n  this.tail = [];\n}\n\nSnake.prototype.update = function() {\n  if (this.length === this.tail.length)\n    for (let i = 0; i < this.tail.length - 1; i++)\n      this.tail[i] = this.tail[i + 1];\n\n  this.tail[this.length - 1] = this.p.createVector(this.x, this.y);\n\n  const x = this.x + this.xspeed * this.size;\n  if (this.xspeed === 1) {\n    this.x = x % this.window;\n  } else if (this.xspeed === -1) {\n    if (x < 0) {\n      this.x = this.window - this.size;\n    } else {\n      this.x = x;\n    }\n  }\n\n  const y = this.y + this.yspeed * this.size;\n  if (this.yspeed === 1) {\n    this.y = y % this.window;\n  } else if (this.yspeed === -1) {\n    if (y < 0) {\n      this.y = this.window - this.size;\n    } else {\n      this.y = y;\n    }\n  }\n}\n\nSnake.prototype.draw = function() {\n  this.p.fill('rgb(0,255,0)');\n\n  for (let i = 0; i < this.tail.length; i++)\n    this.p.rect(this.tail[i].x, this.tail[i].y, this.size, this.size);\n\n  this.p.rect(this.x, this.y, this.size, this.size);\n}\n\nexport default Snake;","import Food from '../models/food';\nimport Snake from '../models/snake';\n\nimport * as Utils from '../utils/math';\n\nfunction ShapeFactory(name, p, options) {\n  const params = {\n    size: options.GRID_SIZE,\n    window: options.WINDOW_SIZE,\n    position: generatePosition(options),\n  };\n\n  if (name === 'food') {\n    return new Food(p, params);\n  }\n\n  if (name === 'snake') {\n    return new Snake(p, params);\n  }\n\n  return {};\n}\n\nfunction generatePosition(options) {\n  const x = getRandomPosition(options);\n  const y = getRandomPosition(options);\n\n  return { x, y };\n}\n\nfunction getRandomPosition(options) {\n  return Utils.getRandomInt(0, options.WINDOW_SIZE / options.GRID_SIZE) * options.GRID_SIZE;\n}\n\nexport default ShapeFactory;","export function getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nexport function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min;\n}","import Const from '../constants';\n\nimport Grid from './grid';\n\nimport ShapeFactory from '../factories/ShapeFactory';\n\nfunction Game(p, options) {\n  this.p = p;\n  this.options = options;\n\n  this.grid = new Grid(p, this.options);\n  this.snake = ShapeFactory('snake', this.p, this.options);\n  this.food = ShapeFactory('food', this.p, this.options);\n\n  this.gameIsPaused = true;\n  this.score = 0;\n}\n\nGame.prototype.init = function() {\n  this.p.setup = this.setup.bind(this);\n\n  this.p.draw = () => {};\n\n  this.p.keyPressed = () => {\n    if (this.p.keyCode === Const.KEYCODE_SPACE) {\n      this.start();\n    }\n  };\n}\n\nGame.prototype.start = function() {\n  this.gameIsPaused = false;\n  this.p.draw = this.draw.bind(this);\n  this.p.keyPressed = this.keyPressed.bind(this);\n}\n\nGame.prototype.resume = function() {\n  this.gameIsPaused = false;\n}\n\nGame.prototype.stop = function() {\n  this.gameIsPaused = true;\n}\n\nGame.prototype.setup = function() {\n  this.p.frameRate(this.options.FRAME_RATE);\n  this.p.createCanvas(this.options.WINDOW_SIZE, this.options.WINDOW_SIZE);\n  this.grid.draw();\n  this.food.draw();\n  this.snake.draw();\n\n  this.pausedGameDraw();\n}\n\nGame.prototype.draw = function() {\n  this.grid.draw();\n  if (this.snake.canEat(this.food)) {\n    this.snake.eat();\n    this.food = ShapeFactory('food', this.p, this.options);\n  }\n\n  this.food.draw();\n\n  if (this.snake.isNotAlive()) {\n    this.score = this.snake.getScore();\n    this.snake.death();\n    this.gameIsPaused = true;\n  }\n\n  !this.gameIsPaused && this.snake.update();\n  this.snake.draw();\n\n  this.pausedGameDraw();\n}\n\nGame.prototype.pausedGameDraw = function() {\n  if (!this.gameIsPaused) return;\n\n  this.p.fill('rgba(0,0,0, 0.7)');\n  this.p.rect(0, 0, this.options.WINDOW_SIZE, this.options.WINDOW_SIZE);\n\n  this.p.textSize(22);\n  this.p.textAlign(this.p.CENTER);\n  this.p.fill('white');\n  this.p.text('Press <SPACE> to start or pause', 0, this.options.WINDOW_SIZE / 2 - 50, this.options.WINDOW_SIZE);\n\n  if (this.score > 0) {\n\n    this.p.textSize(25);\n    this.p.fill('yellow');\n    this.p.text(`Congratulation: Your score is ${this.score}`, 0, this.options.WINDOW_SIZE / 2, this.options.WINDOW_SIZE);\n  }\n}\n\nGame.prototype.keyPressed = function() {\n  if (this.p.keyCode === Const.KEYCODE_SPACE) {\n    if (this.gameIsPaused) {\n      this.resume();\n    } else {\n      this.stop();\n    }\n  }\n\n  if (this.gameIsPaused) return;\n\n  switch(this.p.keyCode) {\n    case this.p.UP_ARROW: {\n      this.snake.direction(0, -1);\n      break;\n    }\n    case this.p.DOWN_ARROW: {\n      this.snake.direction(0, 1);\n      break;\n    }\n    case this.p.RIGHT_ARROW: {\n      this.snake.direction(1, 0);\n      break;\n    }\n    case this.p.LEFT_ARROW: {\n      this.snake.direction(-1, 0);\n      break;\n    }\n  }\n}\n\nexport default Game;","import Const from '../constants';\n\nimport Game from '../models/game';\n\nfunction GameFactory(name, p) {\n  const options = Const;\n\n  if (name === 'classic') {\n    return new Game(p, options);\n  }\n\n  if (name === 'fast') {\n    return new Game(p, {\n      ...options,\n      FRAME_RATE: 45,\n    });\n  }\n\n\n  if (name === 'small') {\n    return new Game(p, {\n      ...options,\n      WINDOW_SIZE: 300,\n    });\n  }\n\n  return {};\n}\n\nexport default GameFactory;","import GameFactory from './factories/GameFactory';\n\nexport default function sketch(name) {\n  return (p) => {\n    const game = GameFactory(name, p);\n\n    game.init();\n  }\n};\n","import React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport { Link, Route, Switch } from \"react-router-dom\";\n\nimport '../../App.css';\n\nimport sketch from './sketch';\n\nfunction SnakeGame({ name }) {\n  return (\n    <div className=\"App\">\n      <h1 style={{ color: 'white' }}>Snake</h1>\n      <P5Wrapper sketch={sketch(name)} />\n    </div>\n  );\n}\nfunction IndexRoute() {\n  return (\n    <header className=\"App-header\">\n      <ul>\n        <li className=\"li-header\">\n          Snake\n        </li>\n        <li>\n          <Link to=\"/snake/classic\">Classic</Link>\n        </li>\n        <li>\n          <Link to=\"/snake/fast\">Fast</Link>\n        </li>\n        <li>\n          <Link to=\"/snake/small\">Small</Link>\n        </li>\n      </ul>\n    </header>\n  );\n}\n\nfunction SnakeRouteIndex() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/snake/classic\">\n          <SnakeGame name=\"classic\" />\n        </Route>\n        <Route path=\"/snake/fast\">\n          <SnakeGame name=\"fast\" />\n        </Route>\n        <Route path=\"/snake/small\">\n          <SnakeGame name=\"small\" />\n        </Route>\n        <Route path=\"/snake/\">\n          <IndexRoute />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default SnakeRouteIndex;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport IndexRoute from \"./pages\";\nimport SnakeGameRoute from \"./pages/snake\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/snake\">\n          <SnakeGameRoute />\n        </Route>\n        <Route path=\"/\">\n          <IndexRoute />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}